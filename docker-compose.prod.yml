version: '3.8'
services:
  api:
    image: ghcr.io/roh963/nest-postgress-project:latest
    command: sh -c "npx prisma migrate deploy && npm run start:prod"  # Migrations + start
    ports:
      - "3000"  
    env_file: .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s  
    restart: unless-stopped

  worker:
    image: ghcr.io/roh963/nest-postgress-project:latest
    command: npm run start:worker
    env_file: .env.prod
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:15-alpine  # Alpine lighter
    env_file: .env.prod  # POSTGRES_* vars
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nestdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"  
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data: